orbs:
  gcp-cli: circleci/gcp-cli@1.8.4
version: 2.1
workflows:
  install_and_configure_cli:
    jobs:
      - gcp-cli/install_and_initialize_cli:
          context: myContext
          executor: gcp-cli/default

description: Initilize the gcloud CLI
parameters:
  gcloud-service-key:
    default: GCLOUD_SERVICE_KEY
    description: >
      Name of environment variable storing the full service key JSON file for
      the Google project
    type: env_var_name
  google-compute-zone:
    default: GOOGLE_COMPUTE_ZONE
    description: The Google compute zone to connect with via the gcloud CLI
    type: env_var_name
  google-project-id:
    default: GOOGLE_PROJECT_ID
    description: The Google project ID to connect with via the gcloud CLI
    type: env_var_name
steps:
  - orb-tools/check-env-var-param:
      command-name: Checking whether required env vars are set to initialize gcloud CLI...
      param: >-
        <<parameters.gcloud-service-key>>,<<parameters.google-project-id>>,<<parameters.google-compute-zone>>
  - run:
      command: >
        # Store service account

        echo $<<parameters.gcloud-service-key>> >
        ${HOME}/gcloud-service-key.json


        # Initialize gcloud CLI

        gcloud auth activate-service-account
        --key-file=${HOME}/gcloud-service-key.json

        gcloud --quiet config set project $<<parameters.google-project-id>>

        gcloud --quiet config set compute/zone
        $<<parameters.google-compute-zone>>
      name: Initialize gcloud CLI to connect to Google Cloud
      
jobs:
  builds:
    docker:
      - image: google/cloud-sdk:latest
    working_directory: ~/circleci/google_app_engine
    steps:
      - gcp-cli/initialize
      - run:
        name: Deploy to Google App Engine
        command: |
          gcloud app deploy ~/circleci/google_app_engine/app.yaml
